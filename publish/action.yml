name: Fastforge Publish
description: Publish your app into popular testing or distribution platforms.
author: LiJianying
inputs:
  path:
    description: "The path to the application bundle to publish."
    required: true
  target:
    description: "The target provider(s) to publish to."
    required: true
  app-version:
    description: "The version of the application to publish."
    required: false

  # Firebase
  firebase-app:
    description: "The unique ID of the application on Firebase. This is NOT your bundle identifier."
    required: false
  firebase-release-notes:
    description: "The release notes for the published application."
    required: false
  firebase-release-notes-file:
    description: "The path of a file containing the release notes. This is a more extensive alternative to firebase-release-notes."
    required: false
  firebase-testers:
    description: "The testers that will be notified about the published application."
    required: false
  firebase-testers-file:
    description: "The path of a file containing testers that will be notified. This is a more extensive alternative to firebase-testers."
    required: false
  firebase-groups:
    description: "The groups that will be notified about the published application."
    required: false
  firebase-groups-file:
    description: "The path of a file containing groups that will be notified. This is a more extensive alternative to firebase-groups."
    required: false

  # Firebase Hosting
  firebase-hosting-project-id:
    description: "The Firebase Hosting project ID."
    required: false

  # Minio
  minio-endpoint:
    description: "The Minio endpoint."
    required: false
  minio-access-key:
    description: "The Minio access key."
    required: false
  minio-secret-key:
    description: "The Minio secret key."
    required: false
  minio-region:
    description: "The Minio region."
    required: false
  minio-bucket:
    description: "The Minio bucket name."
    required: false
  minio-savekey-prefix:
    description: "The Minio savekey prefix."
    required: false

  # GitHub
  github-repo:
    description: "The repository to publish to, format: <owner>/<repo>"
    required: false
  github-release-title:
    description: "The title of the new release on GitHub."
    required: false
  github-release-draft:
    description: "Whether to create a draft release on GitHub."
    required: false
  github-release-prerelease:
    description: "Whether to create a prerelease on GitHub."
    required: false

  # PlayStore
  playstore-package-name:
    description: "The package name for PlayStore."
    required: false
  playstore-track:
    description: "The track for PlayStore."
    required: false

  # Qiniu
  qiniu-bucket:
    description: "The Qiniu bucket name."
    required: false
  qiniu-bucket-domain:
    description: "The Qiniu bucket domain."
    required: false
  qiniu-savekey-prefix:
    description: "The Qiniu savekey prefix."
    required: false

  # Vercel
  vercel-org-id:
    description: "The Vercel organization ID."
    required: false
  vercel-project-id:
    description: "The Vercel project ID."
    required: false

runs:
  using: composite
  steps:
    - run: |
        CMD="fastforge publish --path '${{ inputs.path }}' --target '${{ inputs.target }}'"

        if [ -n "${{ inputs.app-version }}" ]; then
          CMD="$CMD --app-version '${{ inputs.app-version }}'"
        fi

        # Firebase
        if [ -n "${{ inputs.firebase-app }}" ]; then
          CMD="$CMD --firebase-app '${{ inputs.firebase-app }}'"
        fi
        if [ -n "${{ inputs.firebase-release-notes }}" ]; then
          CMD="$CMD --firebase-release-notes '${{ inputs.firebase-release-notes }}'"
        fi
        if [ -n "${{ inputs.firebase-release-notes-file }}" ]; then
          CMD="$CMD --firebase-release-notes-file '${{ inputs.firebase-release-notes-file }}'"
        fi
        if [ -n "${{ inputs.firebase-testers }}" ]; then
          CMD="$CMD --firebase-testers '${{ inputs.firebase-testers }}'"
        fi
        if [ -n "${{ inputs.firebase-testers-file }}" ]; then
          CMD="$CMD --firebase-testers-file '${{ inputs.firebase-testers-file }}'"
        fi
        if [ -n "${{ inputs.firebase-groups }}" ]; then
          CMD="$CMD --firebase-groups '${{ inputs.firebase-groups }}'"
        fi
        if [ -n "${{ inputs.firebase-groups-file }}" ]; then
          CMD="$CMD --firebase-groups-file '${{ inputs.firebase-groups-file }}'"
        fi

        # Firebase Hosting
        if [ -n "${{ inputs.firebase-hosting-project-id }}" ]; then
          CMD="$CMD --firebase-hosting-project-id '${{ inputs.firebase-hosting-project-id }}'"
        fi

        # Minio
        if [ -n "${{ inputs.minio-endpoint }}" ]; then
          CMD="$CMD --minio-endpoint '${{ inputs.minio-endpoint }}'"
        fi
        if [ -n "${{ inputs.minio-access-key }}" ]; then
          CMD="$CMD --minio-access-key '${{ inputs.minio-access-key }}'"
        fi
        if [ -n "${{ inputs.minio-secret-key }}" ]; then
          CMD="$CMD --minio-secret-key '${{ inputs.minio-secret-key }}'"
        fi
        if [ -n "${{ inputs.minio-region }}" ]; then
          CMD="$CMD --minio-region '${{ inputs.minio-region }}'"
        fi
        if [ -n "${{ inputs.minio-bucket }}" ]; then
          CMD="$CMD --minio-bucket '${{ inputs.minio-bucket }}'"
        fi
        if [ -n "${{ inputs.minio-savekey-prefix }}" ]; then
          CMD="$CMD --minio-savekey-prefix '${{ inputs.minio-savekey-prefix }}'"
        fi

        # GitHub
        if [ -n "${{ inputs.github-repo }}" ]; then
          CMD="$CMD --github-repo '${{ inputs.github-repo }}'"
        fi
        if [ -n "${{ inputs.github-release-title }}" ]; then
          CMD="$CMD --github-release-title '${{ inputs.github-release-title }}'"
        fi
        if [ -n "${{ inputs.github-release-draft }}" ]; then
          CMD="$CMD --github-release-draft '${{ inputs.github-release-draft }}'"
        fi
        if [ -n "${{ inputs.github-release-prerelease }}" ]; then
          CMD="$CMD --github-release-prerelease '${{ inputs.github-release-prerelease }}'"
        fi

        # PlayStore
        if [ -n "${{ inputs.playstore-package-name }}" ]; then
          CMD="$CMD --playstore-package-name '${{ inputs.playstore-package-name }}'"
        fi
        if [ -n "${{ inputs.playstore-track }}" ]; then
          CMD="$CMD --playstore-track '${{ inputs.playstore-track }}'"
        fi

        # Qiniu
        if [ -n "${{ inputs.qiniu-bucket }}" ]; then
          CMD="$CMD --qiniu-bucket '${{ inputs.qiniu-bucket }}'"
        fi
        if [ -n "${{ inputs.qiniu-bucket-domain }}" ]; then
          CMD="$CMD --qiniu-bucket-domain '${{ inputs.qiniu-bucket-domain }}'"
        fi
        if [ -n "${{ inputs.qiniu-savekey-prefix }}" ]; then
          CMD="$CMD --qiniu-savekey-prefix '${{ inputs.qiniu-savekey-prefix }}'"
        fi

        # Vercel
        if [ -n "${{ inputs.vercel-org-id }}" ]; then
          CMD="$CMD --vercel-org-id '${{ inputs.vercel-org-id }}'"
        fi
        if [ -n "${{ inputs.vercel-project-id }}" ]; then
          CMD="$CMD --vercel-project-id '${{ inputs.vercel-project-id }}'"
        fi

        eval $CMD
      shell: bash
